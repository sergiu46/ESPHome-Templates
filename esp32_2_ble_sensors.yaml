substitutions:
  friendly_name: "Node1 ESP32"
  name: node1-esp32

  ble_name_1: "Xiaomi1"
  ble_sensor_1: xiaomi_lywsdcgq
  ble_mac_1: 58:2D:34:38:EE:8F
  
  ble_name_2: "Xiaomi2"
  ble_sensor_2: xiaomi_lywsdcgq
  ble_mac_2: 58:2D:34:38:F2:62

  ip: 192.168.x.x
  gateway: !secret gateway
  subnet: !secret subnet

  board: nodemcu-32s
  password: !secret password
  encryption_key: !secret encryption_key  
  
  wifi_ssid: !secret wifi_ssid
  wifi_pswd: !secret wifi_password

  # Optional
  # wifi_ssid2: !secret wifi_ssid2
  # wifi_pswd2: !secret wifi_password2

#########################################

esphome:
  name: ${name}

esp32:
  board: ${board}
  framework:
    type: arduino

logger:
esp32_ble_tracker:
captive_portal:

api:
  reboot_timeout: 5min
  encryption:
    key: ${encryption_key}

ota:
  password: ${password}

wifi:
  # First SSID
  networks:
  - ssid: ${wifi_ssid}
    password: ${wifi_pswd}

  # Second SSID
  # - ssid: ${wifi_ssid2}
  #   password: ${wifi_pswd2}
  
  # Manual IP
  manual_ip:
    static_ip: ${ip}
    gateway: ${gateway}
    subnet: ${subnet}

  # AP for Fallback
  ap:
    ssid: "${friendly_name}"
    password: ${password}

# Enable Web Server
web_server:
  port: 80
  auth:
    username: ${name}
    password: ${password}

sensor:
  # Xiaomi 1 sensors
  - platform: ${ble_sensor_1}
    mac_address: ${ble_mac_1}
    temperature:
      name: "${ble_name_1} Temp"
    humidity:
      name: "${ble_name_1} Humidity"
    battery_level:
      name: "${ble_name_1} Battery"
      
  # Xiaomi 1 Ble RSSI
  - platform: ble_rssi
    mac_address: ${ble_mac_1}
    name: "${ble_name_1} Ble RSSI"
    icon: "mdi:bluetooth"

  # Xiaomi 2 sensors
  - platform: ${ble_sensor_2}
    mac_address: ${ble_mac_2}
    temperature:
      name: "${ble_name_2} Temp"
    humidity:
      name: "${ble_name_2} Humidity"
    battery_level:
      name: "${ble_name_2} Battery"

  # Xiaomi 2 Ble RSSI
  - platform: ble_rssi
    mac_address: ${ble_mac_2}
    name: "${ble_name_2} Ble RSSI"
    icon: "mdi:bluetooth"

  # WiFi Signal
  - platform: wifi_signal
    name: "${friendly_name} RSSI"
    update_interval: 120s
    filters:
      - lambda: |-
          float VALUE = -20.0;
          if (x <= VALUE) return x;
          else return {};

  # Uptime
  - platform: uptime
    name: "${friendly_name} Uptime Seconds"
    id: uptime_sensor
    update_interval: 60s
    disabled_by_default: true
    internal: true
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h " : "") +
                (minutes ? to_string(minutes) + "m " : "") +
                (to_string(seconds) + "s")
              ).c_str();
              
binary_sensor:
  # Xiaomi 1 Ble Presence
  - platform: ble_presence
    mac_address: ${ble_mac_1}
    name: "${ble_name_1} Presence"

  # Xiaomi 2 Ble Presence
  - platform: ble_presence
    mac_address: ${ble_mac_2}
    name: "${ble_name_2} Presence"

button:
  # Restart Button
  - platform: restart
    name: "${friendly_name} Restart"
    
text_sensor:
  # WiFi Info
  - platform: wifi_info
    ip_address:
      name: "${friendly_name} IP"
      icon: "mdi:ip-network"
      disabled_by_default: true
    ssid:
      name: "${friendly_name} SSID"
      icon: "mdi:wifi-strength-4"
      disabled_by_default: true
      
  # Uptime
  - platform: template
    name: ${friendly_name} Uptime
    id: uptime_human
    icon: mdi:clock-start
    disabled_by_default: true
