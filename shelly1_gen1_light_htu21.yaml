substitutions:
  friendly_name: "Device Name"
  name: device-name
  
  ip: 192.168.x.x
  gateway: !secret gateway
  subnet: !secret subnet

  board: esp01_1m
  password: !secret password
  encryption_key: !secret encryption_key  
  
  wifi_ssid: !secret wifi_ssid
  wifi_pswd: !secret wifi_password

  # Optional
  # wifi_ssid2: !secret wifi_ssid2
  # wifi_pswd2: !secret wifi_password2
  
  # Define I2C Pins  
  i2c_sda: "1"
  i2c_scl: "3"

#########################################

esphome:
  name: ${name}

esp8266:
  board: ${board}

logger:
captive_portal:

api:
  reboot_timeout: 5min
  encryption:
    key: ${encryption_key}

ota:
  password: ${password}

# Enable Web Server
web_server:
  port: 80
  auth:
    username: ${name}
    password: ${password}

wifi:
  networks:
  - ssid: ${wifi_ssid}
    password: ${wifi_pswd}
  # Optional sencondary SSID
  # - ssid: ${wifi_ssid2}
  #   password: ${wifi_pswd2}
  # Optional manual IP
  manual_ip:
    static_ip: ${ip}
    gateway: ${gateway}
    subnet: ${subnet}
  # Optional Fallback SSID
  ap:
    ssid: "${friendly_name}"
    password: ${password}

# Setup I2C
i2c:
  sda: ${i2c_sda}
  scl: ${i2c_scl}  
  scan: true
  id: bus_a

button:
  # Restart Button
  - platform: restart
    name: "${friendly_name} Restart"

text_sensor:
  # Uptime
  - platform: template
    name: ${friendly_name} Uptime
    id: uptime_human
    icon: mdi:clock-start
    disabled_by_default: true
    
  # WiFi Info
  - platform: wifi_info
    ip_address:
      name: "${friendly_name} IP"
      icon: "mdi:ip-network"
      disabled_by_default: true
    ssid:
      name: "${friendly_name} SSID"
      icon: "mdi:wifi-strength-4"
      disabled_by_default: true

sensor:
  # HTU21
  - platform: htu21d
    temperature:
      name: "${friendly_name} HTU21 Temperature"
    humidity:
      name: "${friendly_name} HTU21 Humidity"
    update_interval: 60s

  # WiFi Signal
  - platform: wifi_signal
    name: "${friendly_name} RSSI"
    update_interval: 120s
    
  # VCC Voltage
  - platform: adc
    pin: VCC
    name: "${friendly_name} VCC Voltage"
    disabled_by_default: true
    
  # Uptime
  - platform: uptime
    name: "${friendly_name} Uptime Seconds"
    id: uptime_sensor
    update_interval: 60s
    disabled_by_default: true
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h " : "") +
                (minutes ? to_string(minutes) + "m " : "") +
                (to_string(seconds) + "s")
              ).c_str();

# Device Specific Config shelly1
output:
  - platform: gpio
    pin: GPIO4
    id: shelly_1_relay

light:
  - platform: binary
    name: "${friendly_name}"
    output: shelly_1_relay
    id: lightid

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO5
    name: "${friendly_name} Switch"
    on_state:
      then:
        - light.toggle: lightid
    internal: true
    id: switchid
